<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.haiqing.conference.dao.ConferenceMapper">
    <resultMap id="BaseResultMap" type="com.haiqing.conference.pojo.Conference">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="meetting_id" property="meettingId" jdbcType="INTEGER"/>
        <result column="personnel_id" property="personnelId" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="start_time" property="startTime" jdbcType="BIGINT"/>
        <result column="end_time" property="endTime" jdbcType="BIGINT"/>
        <result column="create_at" property="createAt" jdbcType="BIGINT"/>
        <result column="create_by" property="createBy" jdbcType="INTEGER"/>
        <result column="update_at" property="updateAt" jdbcType="BIGINT"/>
        <result column="update_by" property="updateBy" jdbcType="INTEGER"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from conference
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.haiqing.conference.pojo.Conference" useGeneratedKeys="true" keyProperty="id">
    insert into conference (id, meetting_id, personnel_id, 
      title, start_time, end_time, 
      create_at, create_by, update_at, 
      update_by)
    values (#{id,jdbcType=INTEGER}, #{meettingId,jdbcType=INTEGER}, #{personnelId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{startTime,jdbcType=BIGINT}, #{endTime,jdbcType=BIGINT}, 
      #{createAt,jdbcType=BIGINT}, #{createBy,jdbcType=INTEGER}, #{updateAt,jdbcType=BIGINT}, 
      #{updateBy,jdbcType=INTEGER})
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.haiqing.conference.pojo.Conference">
    update conference
    set meetting_id = #{meettingId,jdbcType=INTEGER},
      personnel_id = #{personnelId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=BIGINT},
      end_time = #{endTime,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=INTEGER},
      update_at = #{updateAt,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select id, meetting_id, personnel_id, title, start_time, end_time, create_at, create_by, 
    update_at, update_by
    from conference
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, meetting_id, personnel_id, title, start_time, end_time, create_at, create_by, 
    update_at, update_by
    from conference
    order by start_time
  </select>
    <!--动态查询接口:针对会议管理查询-->
    <select id="selectByPrimaryKeySelective" resultMap="BaseResultMap" parameterType="map">
        select id, meetting_id, personnel_id, title, start_time, end_time, create_at, create_by,
        update_at, update_by
        from conference
        <trim prefix="WHERE" suffixOverrides="AND|OR">
            <if test="mettingId != null">
                meetting_id=#{mettingId} and
            </if>
            <if test="personnelId != null">
                personnel_id=#{personnelId} and
            </if>
            <if test="title != null">
                <bind name="title" value="'%'+title+'%'"/>
                title like #{title} and
            </if>
            <choose>
                <when test="startTime != null and endTime != null">
                    (start_time &gt; #{startTime} and start_time &lt; #{endTime}
                 or end_time &gt; #{startTime} and end_time &lt; #{endTime}
                 or start_time &lt;= #{startTime} and end_time &gt;= #{endTime})
                </when>
                <when test="startTime != null and endTime == null">
                    start_time &gt;= #{startTime}
                </when>
                <when test="endTime != null and startTime == null">
                    end_time &lt;= #{endTime}
                </when>
            </choose>

            <!--<if test="startTime != null">-->
                <!--start_time &gt;= #{startTime} and-->
            <!--</if>-->
            <!--<if test="endTime != null">-->
                <!--end_time &lt;= #{endTime}-->
            <!--</if>-->

        </trim>
        <trim prefix="order by">
            <if test="sortStartTime == 0">
                start_time
            </if>
            <if test="sortStartTime == 1">
                start_time desc
            </if>
            <if test="sortMeettingId == 2">
                meetting_id
            </if>
            <if test="sortPersonnelId == 3">
                personnel_id
            </if>
            <if test="sortTitle == 4">
                title
            </if>
        </trim>

        <if test="start!=null and size!=null">
            limit #{start},#{size}
        </if>
    </select>
    <!--查询会议的总数-->
    <select id="selectByCount" resultType="int">
        select count(id) from conference
    </select>
    <!--动态更新会议管理-->
    <update id="updateByPrimaryKeySelective" parameterType="com.haiqing.conference.pojo.Conference">
        update conference
        <set>
            <if test="meettingId != null">
                meetting_id = #{meettingId,jdbcType=INTEGER},
            </if>
            <if test="personnelId != null">
                personnel_id = #{personnelId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=BIGINT},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=BIGINT},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=INTEGER},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="updateAt != null">
                update_at = #{updateAt,jdbcType=BIGINT},
            </if>
            <if test="createAt != null">
                create_at = #{createAt,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>


</mapper>